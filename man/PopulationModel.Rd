% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PopulationModel.R
\name{PopulationModel}
\alias{PopulationModel}
\title{R6 Class Representing a Generic Population Model}
\description{
R6 class representing a generic (abstract) spatially-explicit demographic-based
population model provided as an example template.
}
\examples{
# Model for sample attributes nested with a template model for fixed attributes
template_model <- PopulationModel$new(params = list(duration = 10, populations = 5),
                                      coordinates = array(1:10, c(5, 2)),
                                      correlation_matrix = (diag(5)*0.8 + 0.2))
nested_model <- PopulationModel$new(template = template_model)
nested_model$set_sample_attributes(params = c("initial_abundances",
                                              "carrying_capacities",
                                              "dispersal_matrix"),
                                   human_densities = array((1:50)/50, c(5, 10)))
# Set sample attributes with aliases
nested_model$set_sample_aliases(abundances = "initial_abundances")
nested_model$get_sample_aliases()
nested_model$set_sample_attributes(params = list(dispersals = (diag(5)*-0.1 + 0.1),
                                                 abundances = seq(10, 30, by = 5)),
                                   capacities = matrix(seq(50, 32, by = -2),
                                                       nrow = 5, ncol = 10,
                                                       byrow = TRUE))
nested_model$get_template()$get_attributes()
nested_model$get_attributes()
# Consistency and completeness
nested_model$is_consistent()
nested_model$is_complete()
nested_model$initial_abundances <- nested_model$initial_abundances[-1]
nested_model$is_complete()
nested_model$list_completeness()
nested_model$incomplete_attributes()

}
\section{Super classes}{
\code{\link[paleopop:GenericClass]{paleopop::GenericClass}} -> \code{\link[paleopop:GenericModel]{paleopop::GenericModel}} -> \code{PopulationModel}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model_attributes}}{A vector of public model attribute names - another stored as private.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{attribute_aliases}}{A list of alternative alias names for model attributes (form: alias = "attribute") to be used with the set and get attributes methods.}

\item{\code{duration}}{Number of simulation time steps.}

\item{\code{populations}}{Number of populations.}

\item{\code{coordinates}}{Data frame (or matrix) of X-Y population coordinates (WGS84) in longitude (degrees West) and latitude (degrees North).}

\item{\code{initial_abundances}}{Array or matrix of initial abundances for each population.}

\item{\code{carrying_capacities}}{Matrix of carrying capacities ($populations rows by $duration columns).}

\item{\code{dispersal_matrix}}{Matrix of dispersal (migration) rates between populations (target $populations rows by source $populations columns).}

\item{\code{correlation_matrix}}{Matrix of environmental correlation between populations ($populations rows by $populations columns).}

\item{\code{human_densities}}{Matrix of human density (fraction) ($populations rows by $duration columns).}

\item{\code{template_model}}{Nested fixed-attribute template model.}

\item{\code{sample_attributes}}{List of sample attribute names (only).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PopulationModel$new()}}
\item \href{#method-get_attribute_names}{\code{PopulationModel$get_attribute_names()}}
\item \href{#method-set_sample_attributes}{\code{PopulationModel$set_sample_attributes()}}
\item \href{#method-is_consistent}{\code{PopulationModel$is_consistent()}}
\item \href{#method-is_complete}{\code{PopulationModel$is_complete()}}
\item \href{#method-list_completeness}{\code{PopulationModel$list_completeness()}}
\item \href{#method-incomplete_attributes}{\code{PopulationModel$incomplete_attributes()}}
\item \href{#method-clone}{\code{PopulationModel$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericClass" data-id="read_from_rds">}\href{../../paleopop/html/GenericClass.html#method-read_from_rds}{\code{paleopop::GenericClass$read_from_rds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericClass" data-id="save_to_rds">}\href{../../paleopop/html/GenericClass.html#method-save_to_rds}{\code{paleopop::GenericClass$save_to_rds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attribute_aliases">}\href{../../paleopop/html/GenericModel.html#method-get_attribute_aliases}{\code{paleopop::GenericModel$get_attribute_aliases()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attributes">}\href{../../paleopop/html/GenericModel.html#method-get_attributes}{\code{paleopop::GenericModel$get_attributes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="new_clone">}\href{../../paleopop/html/GenericModel.html#method-new_clone}{\code{paleopop::GenericModel$new_clone()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="set_attributes">}\href{../../paleopop/html/GenericModel.html#method-set_attributes}{\code{paleopop::GenericModel$set_attributes()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Initialization method sets template model and sets given attributes individually and/or from a list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$new(template = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{template}}{Template population model containing fixed (non-sampled) attributes.}

\item{\code{...}}{Parameters passed via a \emph{params} list or individually.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_attribute_names"></a>}}
\subsection{Method \code{get_attribute_names()}}{
Returns a list of all attribute names including public and private model attributes, as well as attached attributes (including those from the template model).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$get_attribute_names()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of all attribute names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_sample_attributes"></a>}}
\subsection{Method \code{set_sample_attributes()}}{
Sets the names (only - when \emph{params} is a vector) and values (when \emph{params} is a list and/or when name-value pairs are provided) of the sample attributes for the model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$set_sample_attributes(params = list(), ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{List of parameters/attributes (names and values) or array of names only.}

\item{\code{...}}{Parameters/attributes passed individually.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_consistent"></a>}}
\subsection{Method \code{is_consistent()}}{
Returns a boolean to indicate if (optionally selected or all) model attributes (such as dimensions) are consistent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$is_consistent(params = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{Optional array of parameter/attribute names.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Boolean to indicate consistency of selected/all attributes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_complete"></a>}}
\subsection{Method \code{is_complete()}}{
Returns a boolean to indicate if all attributes necessary to simulate the model have been set and are consistent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$is_complete()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Boolean to indicate model completeness (and consistency).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-list_completeness"></a>}}
\subsection{Method \code{list_completeness()}}{
Returns a list of booleans for each parameter to indicate which attributes necessary to simulate the model have been set and are consistent.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$list_completeness()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of booleans for each parameter to indicate to indicate completeness (and consistency).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-incomplete_attributes"></a>}}
\subsection{Method \code{incomplete_attributes()}}{
Returns a list of attributes necessary to simulate the model that are incomplete.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$incomplete_attributes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List of incomplete attributes which prevent the model simulation.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PopulationModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
