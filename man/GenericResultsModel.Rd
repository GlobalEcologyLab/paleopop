% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GenericResultsModel.R
\name{GenericResultsModel}
\alias{GenericResultsModel}
\title{R6 Class Representing a Generic Results Model.}
\description{
An R6 class to represent a generic (abstract) model for encapsulating and dynamically
generating simulation results, as well as optional re-generated niche carrying 
capacities and/or human densities.
}
\section{Super classes}{
\code{\link[paleopop:GenericClass]{paleopop::GenericClass}} -> \code{\link[paleopop:GenericModel]{paleopop::GenericModel}} -> \code{GenericResultsModel}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model_attributes}}{An array of public model attribute names - another stored as private.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{all}}{Nested simulation results model for all populations.}

\item{\code{parent}}{Parent simulation results model for individual populations.}

\item{\code{default}}{Default value(s) utilized when applying primitive metric functions (e.g. max) to the results.}

\item{\code{occupancy_mask}}{Optional binary mask matrix for each population at each time-step (population rows by duration columns).}

\item{\code{burn_in_duration}}{Optional number of initial 'burn-in' time steps to be ignored.}

\item{\code{carrying_capacities}}{Optional matrix of simulation input carrying capacities to be combined with results ($populations rows by $duration columns).}

\item{\code{human_densities}}{Optional matrix of simulation input human densities to be combined with results ($populations rows by $duration columns).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{GenericResultsModel$new()}}
\item \href{#method-new_clone}{\code{GenericResultsModel$new_clone()}}
\item \href{#method-get_attribute_names}{\code{GenericResultsModel$get_attribute_names()}}
\item \href{#method-clone}{\code{GenericResultsModel$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericClass" data-id="read_from_rds">}\href{../../paleopop/html/GenericClass.html#method-read_from_rds}{\code{paleopop::GenericClass$read_from_rds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericClass" data-id="save_to_rds">}\href{../../paleopop/html/GenericClass.html#method-save_to_rds}{\code{paleopop::GenericClass$save_to_rds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attribute_aliases">}\href{../../paleopop/html/GenericModel.html#method-get_attribute_aliases}{\code{paleopop::GenericModel$get_attribute_aliases()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attributes">}\href{../../paleopop/html/GenericModel.html#method-get_attributes}{\code{paleopop::GenericModel$get_attributes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="set_attributes">}\href{../../paleopop/html/GenericModel.html#method-set_attributes}{\code{paleopop::GenericModel$set_attributes()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Initialization method sets attributes from a results list or file, and sets object attributes individually and/or from a list.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericResultsModel$new(results = NULL, parent = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{results}}{A list containing results or a file path to simulation results.}

\item{\code{parent}}{Parent simulation results model for individual populations (used when nesting a results model clone for all populations).}

\item{\code{...}}{Parameters passed via a \emph{params} list or individually.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new_clone"></a>}}
\subsection{Method \code{new_clone()}}{
Creates a new (re-initialized) object of the current (inherited) object class with optionally passed parameters.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericResultsModel$new_clone(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed via the inherited class constructor (defined in initialize and run via new).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
New object of the inherited class.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_attribute_names"></a>}}
\subsection{Method \code{get_attribute_names()}}{
Returns an array of all attribute names including public and private model attributes, as well as attached attributes, error and warning messages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericResultsModel$get_attribute_names(all = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{all}}{Boolean to indicate if a nested list for all populations (when present) should be also listed (default is FALSE).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Array of all attribute names with optional inclusion of attrribute names of nested results for all populations.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericResultsModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
