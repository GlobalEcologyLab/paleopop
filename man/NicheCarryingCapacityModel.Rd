% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NicheCarryingCapacityModel.R
\name{NicheCarryingCapacityModel}
\alias{NicheCarryingCapacityModel}
\title{R6 Class Representing a Niche Carrying Capacity Model.}
\description{
R6 class functionality for modelling niche carrying capacities within a
spatially-explicit population model. Typically the model calculates carrying
capacities and initial abundances for each sample simulation using data files
generated via a climate niche model. It dynamically generates attributes
defined as \emph{outputs} (default: \emph{carrying_capacities} and
\emph{initial_abundances}) given sampled \emph{inputs} (default:
\emph{niche_breadth}, \emph{niche_cuts} and \emph{niche_cuts}).
}
\section{Super classes}{
\code{\link[paleopop:GenericClass]{paleopop::GenericClass}} -> \code{\link[paleopop:GenericModel]{paleopop::GenericModel}} -> \code{\link[paleopop:GenerativeModel]{paleopop::GenerativeModel}} -> \code{NicheCarryingCapacityModel}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model_attributes}}{A list of public model attributes (name-value pairs) - another stored as private.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{niche_occupancy_mask}}{Optional binary mask (matrix or data frame) for niche carrying capacity time-series data (simulation cells by duration).}

\item{\code{niche_breadth}}{Sampled niche model breadth (typically part of the identifier for a climate niche model data file).}

\item{\code{niche_cuts}}{Sampled niche model cuts (typically part of the identifier for a climate niche model data file).}

\item{\code{density}}{Sampled maximum density of model organism per simulation grid cell.}

\item{\code{carrying_capacities}}{Calculated carrying capacity based on niche model parameters and density.}

\item{\code{initial_abundances}}{Calculated initial abundances based on carrying capacity.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{NicheCarryingCapacityModel$new()}}
\item \href{#method-clone}{\code{NicheCarryingCapacityModel$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericClass" data-id="read_from_rds">}\href{../../paleopop/html/GenericClass.html#method-read_from_rds}{\code{paleopop::GenericClass$read_from_rds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericClass" data-id="save_to_rds">}\href{../../paleopop/html/GenericClass.html#method-save_to_rds}{\code{paleopop::GenericClass$save_to_rds()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attribute_aliases">}\href{../../paleopop/html/GenericModel.html#method-get_attribute_aliases}{\code{paleopop::GenericModel$get_attribute_aliases()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attribute_names">}\href{../../paleopop/html/GenericModel.html#method-get_attribute_names}{\code{paleopop::GenericModel$get_attribute_names()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="get_attributes">}\href{../../paleopop/html/GenericModel.html#method-get_attributes}{\code{paleopop::GenericModel$get_attributes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenericModel" data-id="set_attributes">}\href{../../paleopop/html/GenericModel.html#method-set_attributes}{\code{paleopop::GenericModel$set_attributes()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="add_file_template">}\href{../../paleopop/html/GenerativeModel.html#method-add_file_template}{\code{paleopop::GenerativeModel$add_file_template()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="add_function_template">}\href{../../paleopop/html/GenerativeModel.html#method-add_function_template}{\code{paleopop::GenerativeModel$add_function_template()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="add_generative_requirements">}\href{../../paleopop/html/GenerativeModel.html#method-add_generative_requirements}{\code{paleopop::GenerativeModel$add_generative_requirements()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="generate">}\href{../../paleopop/html/GenerativeModel.html#method-generate}{\code{paleopop::GenerativeModel$generate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="generative_requirements_satisfied">}\href{../../paleopop/html/GenerativeModel.html#method-generative_requirements_satisfied}{\code{paleopop::GenerativeModel$generative_requirements_satisfied()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="new_clone">}\href{../../paleopop/html/GenerativeModel.html#method-new_clone}{\code{paleopop::GenerativeModel$new_clone()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="read_file">}\href{../../paleopop/html/GenerativeModel.html#method-read_file}{\code{paleopop::GenerativeModel$read_file()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="paleopop" data-topic="GenerativeModel" data-id="run_function">}\href{../../paleopop/html/GenerativeModel.html#method-run_function}{\code{paleopop::GenerativeModel$run_function()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Initialization method sets the generative template and requirements as well as any attributes passed via a \emph{params} list or individually.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NicheCarryingCapacityModel$new(
  generative_template = NULL,
  generative_requirements = NULL,
  attribute_aliases = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{generative_template}}{Optional nested object for generative niche carrying capacity model attributes that need to be maintained when a new clone object is generated for a sample simulation.}

\item{\code{generative_requirements}}{Optional list of attribute names and the template setting (\emph{"file"} or \emph{"function"}) that is required to generate their values (default is \emph{"file"}).}

\item{\code{attribute_aliases}}{Optional list of extra alias names for model attributes (form: alias = "attribute") to be used with the set and get attributes methods.}

\item{\code{...}}{Parameters passed via a \emph{params} list or individually.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{NicheCarryingCapacityModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
